import os
from dotenv import load_dotenv


dotenv_path = os.path.join(os.path.dirname(__file__), ".env")
if os.path.exists(dotenv_path):
    load_dotenv(dotenv_path)

"""
TOKEN
"""
AUTH_TOKEN = os.getenv("AUTH_TOKEN")
SECRET_KEY = os.getenv("SECRET_KEY")
ALGORITHM = "HS256"
ACCESS_TOKEN_EXPIRE_MINUTES = 5
REFRESH_TOKEN_EXPIRE_MINUTES = 1440


"""
BINANCE API WEIGHTS
"""
WEIGHT_GET_TICKER = 2
WEIGHT_REQUEST_KLINE = 6


"""
REDIS
"""
REDIS_HOST = "localhost"
REDIS_PORT = 6379
REDIS_DB = 0


"""
POSTGRESQL
"""
POSTGRESQL_USER = os.getenv("POSTGRESQL_USER")
POSTGRESQL_PASSWORD = os.getenv("POSTGRESQL_PASSWORD")
POSTGRESQL_HOST = os.getenv("POSTGRESQL_HOST")
POSTGRESQL_PORT = os.getenv("POSTGRESQL_PORT")
POSTGRESQL_DB = "ci"
SQLALCHEMY_DATABASE_URL = (f"postgresql+asyncpg://{POSTGRESQL_USER}:{POSTGRESQL_PASSWORD}@{POSTGRESQL_HOST}:"
                           f"{POSTGRESQL_PORT}/{POSTGRESQL_DB}")


"""
POSTGRESQL_TEST
"""
POSTGRESQL_USER = os.getenv("POSTGRESQL_USER_TEST")
POSTGRESQL_PASSWORD = os.getenv("POSTGRESQL_PASSWORD_TEST")
POSTGRESQL_HOST = os.getenv("POSTGRESQL_HOST_TEST")
POSTGRESQL_PORT = os.getenv("POSTGRESQL_PORT_TEST")
POSTGRESQL_DB = "ci_test"
SQLALCHEMY_DATABASE_URL_TEST = (f"postgresql+asyncpg://{POSTGRESQL_USER}:{POSTGRESQL_PASSWORD}@{POSTGRESQL_HOST}:"
                                f"{POSTGRESQL_PORT}/{POSTGRESQL_DB}")


"""
SENTRY
"""
SENTRY_DSN = os.getenv("SENTRY_DSN")
